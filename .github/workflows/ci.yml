name: ci

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
    paths:
      - '**/syntax_test_*'
      - '**/*.hidden-tmLanguage'
      - '**/*.sublime-syntax'
      - '**/*.tmLanguage'
      - '**/*.tmPreferences'
      - '.github/workflows/ci.yml'
  pull_request:
    branches:
      - '*'
    paths:
      - '**/syntax_test_*'
      - '**/*.hidden-tmLanguage'
      - '**/*.sublime-syntax'
      - '**/*.tmLanguage'
      - '**/*.tmPreferences'
      - '.github/workflows/ci.yml'
  workflow_dispatch:

jobs:
  run_syntax_tests:
    name: Test on Build ${{ matrix.sublime-build }} (${{ matrix.sublime-channel }})
    runs-on: ubuntu-latest
    timeout-minutes: 15 # default is 6 hours!
    continue-on-error: ${{ matrix.optional }}
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        include:
          - sublime-channel: stable
            sublime-build: 4126
            optional: true
          - sublime-channel: dev
            sublime-build: 4125
            optional: false
    steps:

      - name: Git checkout
        uses: actions/checkout@master

      - name: Check that ST4 features are not used
        run: |
          set -x
          ST4_REGEX="- (extends:|meta_prepend:|meta_append:|pop: [0-9]+)"
          MATCHES="$(find . -name '.*.sublime-syntax' -type f -exec grep -E "$ST4_REGEX" {} +)"
          if [ -n "$MATCHES" ]; then
            echo "Using ST4 features is not permitted, as those aren't supported by sourcegraph/syntect right now"
            echo "$MATCHES"
            exit 1
          fi

      - name: Get binary for Build ${{ matrix.sublime-build }} (${{ matrix.sublime-channel }})
        run: |
          wget -O st_syntax_tests.tar.xz https://download.sublimetext.com/st_syntax_tests_build_${{ matrix.sublime-build }}_x64.tar.xz
          tar xf st_syntax_tests.tar.xz
          mv st_syntax_tests/* ./
          rm -R st_syntax_tests st_syntax_tests.tar.xz

      - name: 'Move root dirs into "Data/Packages/" subdir'
        run: |
          mkdir -p Data/Packages/
          find . -maxdepth 1 -mindepth 1 -type d -not -name 'Data' -exec mv '{}' Data/Packages/ ';'
          # FIXME: (kludge) Delete PHP test because it seems to be
          # causing some needless failures right now.
          rm -f Data/Packages/PHP/syntax_test_php.php

      - name: Run syntax tests
        run: ./syntax_tests
